#!/usr/bin/env bash

set -exo pipefail

name="$(yq eval '.metadata.name' /kratix/input/object.yaml)"
namespace="${name}-unleash"
autoscaling="$(yq eval '.spec.autoscaling' /kratix/input/object.yaml)"
port="$(yq eval '.spec.database_config.port // 5432' /kratix/input/object.yaml)"
user="$(yq eval '.spec.database_config.user // "postgres" ' /kratix/input/object.yaml)"
dbName="$(yq eval '.spec.database_config.dbName // "example"' /kratix/input/object.yaml)"
host="$(yq eval '.spec.database_config.host // "localhost"' /kratix/input/object.yaml)"
export ssl="$(yq eval '.spec.database_config.ssl // "true"' /kratix/input/object.yaml)"
secretName="$(yq eval '.spec.database_config.secretName // "mysecret" ' /kratix/input/object.yaml)"

helm_flags="--set postgresql.enabled=false \
            --set dbConfig.useExistingSecret.name=${secretName} \
            --set dbConfig.database=${dbName} \
            --set dbConfig.host=${host} \
            --set dbConfig.port=${port} \
            --set dbConfig.user=${user}"

if [ "${autoscaling}" = "true" ]; then
  helm_flags="${helm_flags} --set autoscaling.enabled=true \
              --set autoscaling.minReplicas=2 \
              --set autoscaling.maxReplicas=5"
fi

cat > kustomization.yaml <<EOF
namespace: ${namespace}
resources:
- unleash.yaml
EOF

helm template ${name} unleash ${helm_flags} \
  --skip-tests \
  --namespace ${namespace} \
  --repo https://docs.getunleash.io/helm-charts |
    sed s_autoscaling/v2beta1_autoscaling/v2_g > unleash-template.yaml

export resources='{ "limits": {"cpu": "400m", "memory": "512Mi" }, "requests": { "cpu": "75m", "memory": "128Mi" }}'
cat unleash-template.yaml | \
  yq '(select(.kind == "Deployment") | .spec.template.spec.containers[] | select(.name == "unleash") | .env[] | select(.name == "DATABASE_SSL") | .value) = strenv(ssl)' | \
  yq '(select(.kind == "Deployment") | .spec.template.spec.containers[] | select(.name == "unleash" ).resources ) = env(resources)' > unleash.yaml

kubectl kustomize . > /kratix/output/unleash.yaml

kubectl create namespace $namespace --dry-run=client -o yaml > /kratix/output/namespace.yaml

cat > /kratix/metadata/status.yaml <<EOF
message: Deployed to namepace $namespace. Initial default admin password is "unleash4all"
username: admin
password: unleash4all
EOF
