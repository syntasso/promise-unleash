#!/usr/bin/env sh

set -exo pipefail

if [ "$KRATIX_WORKFLOW_TYPE" = "resource" ]; then
    export name="$(yq eval '.metadata.name' /kratix/input/object.yaml)"
    export namespace="${name}-unleash"
    export autoscaling="$(yq eval '.spec.autoscaling' /kratix/input/object.yaml)"

    team="unleash"

    export ssl="'{\"rejectUnauthorized\": false }'"

    # Create resource request for a new unleash server
    yq eval ".metadata.name = \"${name}\" |
             .spec.database_config.host = \"${team}-${name}-postgresql.${namespace}.svc.cluster.local\" |
             .spec.database_config.user = \"postgres\" |
             .spec.database_config.dbName = \"unleash\" |
             .spec.database_config.ssl = env(ssl) |
             .spec.database_config.secretName = \"postgres.${team}-${name}-postgresql.credentials.postgresql.acid.zalan.do\" |
             .spec.autoscaling = env(autoscaling)" /resources/unleash-request.yaml > /kratix/output/unleash-request.yaml

    # Create RR for a new postgres, and set the namespace
    yq eval ".metadata.name = \"${name}\" |
             .spec.namespace = \"${namespace}\" |
             .spec.teamId = \"${team}\" |
             .spec.dbName = \"unleash\"
        " /resources/postgres-request.yaml > /kratix/output/postgres-request.yaml
else
  cp /tmp/dependencies/* /kratix/output/
fi
